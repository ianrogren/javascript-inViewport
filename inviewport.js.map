{"version":3,"sources":["source/inviewport.js"],"names":[],"mappings":"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","file":"inviewport.js","sourcesContent":["/**\n * javascript-inViewport.\n *\n * @format\n */\n\n/* eslint-env es5 */\n/* eslint no-undef: 0 */\n/* eslint no-var: 0 */\n/* eslint no-console: 0 */\n/* eslint comma-dangle: 0 */\n/* eslint no-extend-native: [\"error\", { \"exceptions\": [\"Object\"] }] */\n/* eslint-disable prefer-destructuring */\n\nObject.prototype.inViewport = function inViewport(\n  xValue,\n  yValue,\n  type = 'percentage'\n) {\n  const bounds = this.getBoundingClientRect();\n  const viewport = {\n    top: window.pageYOffset,\n    left: window.pageXOffset,\n    bottom: window.pageYOffset + window.innerHeight,\n    right: window.pageXOffset + window.innerWidth,\n  };\n  const visible = {\n    top: bounds.top >= 0 && bounds.top < window.innerHeight,\n    bottom: bounds.bottom > 0 && bounds.bottom <= window.innerHeight,\n    left: bounds.left >= 0 && bounds.left < window.innerWidth,\n    right: bounds.right > 0 && bounds.right <= window.innerWidth,\n  };\n\n  /**\n   * Error Handling.\n   */\n  const errorHandling = () => {\n    let error = false;\n    if (window === 'undefined') {\n      console.error('inViewport: no window object found');\n      error = true;\n    }\n    return error;\n  };\n\n  /**\n   * Vertical Check.\n   */\n  const verticalCheck = () => {\n    let element = 0;\n\n    if (visible.top && !visible.bottom) {\n      element =\n        type === 'pixel'\n          ? Math.abs(bounds.top - window.innerHeight)\n          : Math.abs((bounds.top - window.innerHeight) / bounds.height);\n    } else if (!visible.top && visible.bottom) {\n      element =\n        type === 'pixel'\n          ? bounds.bottom\n          : Math.abs(bounds.bottom / bounds.height);\n    }\n\n    return element >= yValue;\n  };\n\n  /**\n   * Horizontal Check.\n   */\n  const horizontalCheck = () => {\n    let element = 0;\n\n    if (visible.right && !visible.left) {\n      element =\n        type === 'pixel' ? bounds.right : Math.abs(bounds.right / bounds.width);\n    } else if (!visible.right && visible.left) {\n      element =\n        type === 'pixel'\n          ? Math.abs(viewport.right - bounds.left)\n          : Math.abs((viewport.right - bounds.left) / bounds.width);\n    }\n\n    return element >= xValue;\n  };\n\n  /**\n   * Element Bounds Check.\n   *\n   * @param {object} boundCheck\n   */\n  const elementBoundsCheck = (boundaries) => {\n    const { sideA, sideB, measurementDirection } = boundaries;\n    const xPosition = window.pageXOffset + bounds.left;\n    const yPosition = window.pageYOffset + bounds.top;\n\n    let objectVisible = 0;\n\n    /**\n     * Return true if element is completely visible or if the element is too\n     * big for the viewport.\n     */\n    if (\n      (visible[sideA] && visible[sideB]) ||\n      (yPosition <= viewport[sideA] &&\n        viewport[sideB] <= yPosition + bounds[measurementDirection]) ||\n      (xPosition <= viewport.left &&\n        viewport.right <= xPosition + elementBounds.width)\n    ) {\n      return true;\n    }\n\n    objectVisible =\n      measurementDirection === 'height' ? verticalCheck() : horizontalCheck();\n\n    return objectVisible;\n  };\n\n  /**\n   * Is In View.\n   */\n  const isInView = () => {\n    const errorFound = errorHandling();\n    if (errorFound) {\n      return false;\n    }\n\n    const verticalBoundaries = {\n      sideA: 'top',\n      sideB: 'bottom',\n      measurementDirection: 'height',\n    };\n\n    const horizontalBoundaries = {\n      sideA: 'right',\n      sideB: 'left',\n      measurementDirection: 'width',\n    };\n\n    return (\n      elementBoundsCheck(verticalBoundaries) &&\n      elementBoundsCheck(horizontalBoundaries)\n    );\n  };\n\n  return isInView();\n};\n\nconst inViewport = Object.prototype.inViewport;\nexport default inViewport;\n"]}