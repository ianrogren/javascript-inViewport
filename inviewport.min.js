!function(){"use strict";var e={d:function(r,o){for(var t in o)e.o(o,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:o[t]})},o:function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};function o(e,r,o){var t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if("IntersectionObserver"in window&&e){var n=t&&t.root?t.root:null,i=t&&t.rootMargin?t.rootMargin:"0px",a={root:n,rootMargin:i,threshold:Array.isArray(r)&&r.length>0||r>=0&&r<=1?r:.5},u=new IntersectionObserver((function(e,r){e.forEach((function(e){e.intersectionRatio>0&&(Array.isArray(o)?(o[0](),1===o.length&&r.unobserve(e.target)):o()),!1===e.isIntersecting&&Array.isArray(o)&&"function"==typeof o[1]&&o[1]()}))}),a);u.observe(e)}}e.r(r),e.d(r,{default:function(){return o}});var t=window;for(var n in r)t[n]=r[n];r.__esModule&&Object.defineProperty(t,"__esModule",{value:!0})}();
//# sourceMappingURL=inviewport.min.js.map